import streamlit as st
import pandas as pd
import numpy as np

st.set_page_config(page_title="Konnekt", page_icon=":car:", layout="wide")

st.title("Konnekt")

st.write("Welcome! Keep track of your deliveries, complaints, and more.")

dataset_size = 80

def genRandomValues():
    values = np.random.randn(dataset_size).cumsum()
    # Scale the values to fit between 50 and 200
    values = 50 + 150 * (values - values.min()) / (values.max() - values.min())

    # Sort the values in decreasing order
    values = np.sort(values)[::-1]

    # Introduce some aberration by adding random noise
    noise = np.random.normal(scale=10, size=dataset_size)
    values_with_noise = values + noise

    # Clip values to stay within the range of 0 to 200
    values_with_noise = np.clip(values_with_noise, 50, 200)
    return values_with_noise

# Random datasets: time series
time_data = {
    'Date': pd.date_range('2024-01-01', periods=dataset_size),
    'Complaints': genRandomValues()
}

left_col, middle_col, right_col = st.columns([1, 2, 1])

with left_col:
    st.subheader("Trends")
    with st.container(border=True):
        st.metric(label="Revenue", value="24.87B€", delta="7%")
    with st.container(border=True):
        st.metric(label="Costs", value="9.26B€", delta="3%", delta_color="inverse")
    with st.container(border=True):
        st.metric(label="Savings", value="14.7%", delta="1.5%")

with middle_col:
    st.subheader("Monthly Complaint Resolution")
    # Time series chart
    st.line_chart(time_data, use_container_width=True, y='Complaints', x='Date', height=400, color="#ff4b4b")
    st.write(" ")
    st.write(" ")
    st.write(" ")
    st.write(" ")
    st.write(" ")
    st.write(" ")
    with st.container(border=True):
        x = st.columns(5)
        with x[2]:
            st.page_link("pages/3_Overview.py", label=":closed_book: View more")

with right_col:
    st.subheader("Recent Complaints")
    # Table with Brslin districts and a progress bar for each
    complaints = pd.DataFrame({
        'District': ['Mitte', 'Kreuzberg', 'Neukölln', 'Charlottenburg', 'Pankow'],
        'Complaints': [20, 15, 10, 5, 2]
    })
    st.dataframe(complaints, column_config={
        "District": st.column_config.TextColumn(
            "District",
        ),
        "Complaints": st.column_config.ProgressColumn(
            "Complaints",
            format="%f",
            min_value=0,
            max_value=max(complaints['Complaints']),
    )})

    with st.container(border=True):
        st.subheader("Analyzed by")
        l, r = st.columns([1, 1])
        with l:
            st.image("data/logo.png", width=100)
        with r:
            st.write(" ")
            st.write(" ")
            st.subheader("Konnekt")